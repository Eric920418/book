// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 管理員資料表
model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 書籍資訊
model Book {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  coverImage  String?
  audioUrl    String?
  publishDate DateTime?
  isbn        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  author      Author   @relation(fields: [authorId], references: [id])
  authorId    String
}

// 作者資訊
model Author {
  id          String   @id @default(cuid())
  name        String
  biography   String   @db.Text
  photo       String?
  email       String?
  website     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  books       Book[]
}

// 測驗資料表
model Quiz {
  id          String      @id @default(cuid())
  title       String
  description String?
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  questions   Question[]
  results     QuizResult[]
}

// 問題資料表
model Question {
  id          String   @id @default(cuid())
  text        String
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  quiz        Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId      String
  options     Option[]
}

// 選項資料表
model Option {
  id          String   @id @default(cuid())
  text        String
  score       Int      @default(0) // 用於計算結果的分數
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId  String
  answers     Answer[]
}

// 測驗結果資料表
model QuizResult {
  id          String   @id @default(cuid())
  email       String
  totalScore  Int
  resultData  Json     // 儲存詳細的測驗結果
  createdAt   DateTime @default(now())
  
  quiz        Quiz     @relation(fields: [quizId], references: [id])
  quizId      String
  answers     Answer[]
}

// 答案資料表（記錄每個問題的答案）
model Answer {
  id          String     @id @default(cuid())
  
  result      QuizResult @relation(fields: [resultId], references: [id], onDelete: Cascade)
  resultId    String
  
  option      Option     @relation(fields: [optionId], references: [id])
  optionId    String
  
  createdAt   DateTime   @default(now())
  
  @@unique([resultId, optionId])
}
